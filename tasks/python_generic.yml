---

- name: "Python | Check that it is still not installed | {{ py_data.version }}"
  become: true
  ansible.builtin.stat:
    path: "{{ py_data.bin }}"
  register: already_installed
  ignore_errors: true

- name: "Python | Download | {{ py_data.version }}"
  ansible.builtin.get_url:
    url: "{{ py_data.url }}"
    dest: "{{ py_data.tar_file }}"
    checksum: "md5:{{ py_data.md5 }}"
    mode: "0440"
  when: not already_installed.stat.exists

- name: "Python | Uncompress | {{ py_data.version }}"
  ansible.builtin.unarchive:
    src: "{{ py_data.tar_file }}"
    dest: /tmp
    copy: false
    creates: "{{ py_data.sources }}"
  when: not already_installed.stat.exists

- name: "Python | Compile and install | {{ py_data.version }}"
  become: true
  ansible.builtin.command: "{{ item }}"
  args:
    chdir: "{{ py_data.sources }}"
  with_items:
    - "./configure --enable-optimizations --prefix {{ py_data.install }}"
    - make
    - make install
  when: not already_installed.stat.exists
  register: output
  changed_when: output.rc != 0

- name: "Python | Create symlink | {{ py_data.version }}"
  become: true
  ansible.builtin.file:
    src: "{{ py_data.install }}"
    dest: "{{ base_install_folder }}/python{{ py_data.major_version }}"
    state: link
  when: not already_installed.stat.exists
